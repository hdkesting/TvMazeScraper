@model RtlTvMazeScraper.UI.ViewModels.ScrapeIndexViewModel


@{
    ViewBag.Title = "Scraper";
}

<h2>Scrape by show id</h2>

<p>Pausing to scrape by show id starting from <em>@Model.NextStartIndex.ToString("N0")</em></p>

@if (Model.PreviousIndex > 0)
{
    <p>The previous scrape for '@Model.PreviousIndex' found @Model.PreviousCount shows out of @Model.AttemptedCount tries.</p>
}

<blockquote>
    <h2>Explanation</h2>
    <p>
        Try and read a batch of shows by ID, starting from the number as specified in the "start" parameter.
        After each batch is read (and stored locally) there is a short pause before reading the next one to prevent overloading the remote system.
    </p>
    <p>The scraping will stop when several batches return no results.</p>
</blockquote>

<script type="text/javascript">
    // client-side pause before scraping the next batch
    setTimeout(function () { location.href = "@Url.Action("Scrape", new { start = Model.NextStartIndex })" }, 7000);
</script>
