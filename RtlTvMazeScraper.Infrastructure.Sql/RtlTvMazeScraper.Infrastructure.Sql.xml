<?xml version="1.0"?>
<doc>
    <assembly>
        <name>RtlTvMazeScraper.Infrastructure.Sql</name>
    </assembly>
    <members>
        <member name="T:RtlTvMazeScraper.Infrastructure.Sql.Interfaces.IShowContext">
            <summary>
            Interface for DbContext of shows.
            </summary>
        </member>
        <member name="P:RtlTvMazeScraper.Infrastructure.Sql.Interfaces.IShowContext.Shows">
            <summary>
            Gets the shows.
            </summary>
            <value>
            The shows.
            </value>
        </member>
        <member name="P:RtlTvMazeScraper.Infrastructure.Sql.Interfaces.IShowContext.CastMembers">
            <summary>
            Gets the cast members.
            </summary>
            <value>
            The cast members.
            </value>
        </member>
        <member name="M:RtlTvMazeScraper.Infrastructure.Sql.Interfaces.IShowContext.SaveChanges">
            <summary>
            Saves the changes.
            </summary>
            <returns>Number of changes.</returns>
        </member>
        <member name="M:RtlTvMazeScraper.Infrastructure.Sql.Interfaces.IShowContext.SaveChangesAsync(System.Threading.CancellationToken)">
            <summary>
            Saves the changes asynchronously.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            Number of changes.
            </returns>
        </member>
        <member name="T:RtlTvMazeScraper.Infrastructure.Sql.Migrations.InitialCreate">
            <summary>
            Initial create of the database schema.
            </summary>
            <seealso cref="T:Microsoft.EntityFrameworkCore.Migrations.Migration" />
        </member>
        <member name="M:RtlTvMazeScraper.Infrastructure.Sql.Migrations.InitialCreate.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <summary>
            <para>
            Builds the operations that will migrate the database 'up'.
            </para>
            <para>
            That is, builds the operations that will take the database from the state left in by the
            previous migration so that it is up-to-date with regard to this migration.
            </para>
            <para>
            This method must be overridden in each class the inherits from <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Migration" />.
            </para>
            </summary>
            <param name="migrationBuilder">The <see cref="T:Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder" /> that will build the operations.</param>
        </member>
        <member name="M:RtlTvMazeScraper.Infrastructure.Sql.Migrations.InitialCreate.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <summary>
            <para>
            Builds the operations that will migrate the database 'down'.
            </para>
            <para>
            That is, builds the operations that will take the database from the state left in by
            this migration so that it returns to the state that it was in before this migration was applied.
            </para>
            <para>
            This method must be overridden in each class the inherits from <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Migration" /> if
            both 'up' and 'down' migrations are to be supported. If it is not overridden, then calling it
            will throw and it will not be possible to migrate in the 'down' direction.
            </para>
            </summary>
            <param name="migrationBuilder">The <see cref="T:Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder" /> that will build the operations.</param>
        </member>
        <member name="M:RtlTvMazeScraper.Infrastructure.Sql.Migrations.InitialCreate.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <summary>
            Implemented to builds the <see cref="P:Microsoft.EntityFrameworkCore.Migrations.Migration.TargetModel" />.
            </summary>
            <param name="modelBuilder">The <see cref="T:Microsoft.EntityFrameworkCore.ModelBuilder" /> to use to build the model.</param>
        </member>
        <member name="T:RtlTvMazeScraper.Infrastructure.Sql.Migrations.ShowCastMember">
            <summary>
            Migration to add many-to-many relationship "Show - CastMember".
            </summary>
            <seealso cref="T:Microsoft.EntityFrameworkCore.Migrations.Migration" />
        </member>
        <member name="M:RtlTvMazeScraper.Infrastructure.Sql.Migrations.ShowCastMember.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <summary>
            <para>
            Builds the operations that will migrate the database 'up'.
            </para>
            <para>
            That is, builds the operations that will take the database from the state left in by the
            previous migration so that it is up-to-date with regard to this migration.
            </para>
            <para>
            This method must be overridden in each class the inherits from <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Migration" />.
            </para>
            </summary>
            <param name="migrationBuilder">The <see cref="T:Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder" /> that will build the operations.</param>
        </member>
        <member name="M:RtlTvMazeScraper.Infrastructure.Sql.Migrations.ShowCastMember.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <summary>
            <para>
            Builds the operations that will migrate the database 'down'.
            </para>
            <para>
            That is, builds the operations that will take the database from the state left in by
            this migration so that it returns to the state that it was in before this migration was applied.
            </para>
            <para>
            This method must be overridden in each class the inherits from <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Migration" /> if
            both 'up' and 'down' migrations are to be supported. If it is not overridden, then calling it
            will throw and it will not be possible to migrate in the 'down' direction.
            </para>
            </summary>
            <param name="migrationBuilder">The <see cref="T:Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder" /> that will build the operations.</param>
        </member>
        <member name="M:RtlTvMazeScraper.Infrastructure.Sql.Migrations.ShowCastMember.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <summary>
            Implemented to builds the <see cref="P:Microsoft.EntityFrameworkCore.Migrations.Migration.TargetModel" />.
            </summary>
            <param name="modelBuilder">The <see cref="T:Microsoft.EntityFrameworkCore.ModelBuilder" /> to use to build the model.</param>
        </member>
        <member name="T:RtlTvMazeScraper.Infrastructure.Sql.Model.CastMember">
            <summary>
            A cast member.
            </summary>
        </member>
        <member name="P:RtlTvMazeScraper.Infrastructure.Sql.Model.CastMember.Id">
            <summary>
            Gets or sets the member identifier.
            </summary>
            <value>
            The identifier.
            </value>
        </member>
        <member name="P:RtlTvMazeScraper.Infrastructure.Sql.Model.CastMember.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:RtlTvMazeScraper.Infrastructure.Sql.Model.CastMember.Birthdate">
            <summary>
            Gets or sets the birthdate.
            </summary>
            <value>
            The birthdate.
            </value>
        </member>
        <member name="P:RtlTvMazeScraper.Infrastructure.Sql.Model.CastMember.ShowCastMembers">
            <summary>
            Gets the shows this actor appears in.
            </summary>
            <value>
            The shows.
            </value>
        </member>
        <member name="T:RtlTvMazeScraper.Infrastructure.Sql.Model.Show">
            <summary>
            A show.
            </summary>
        </member>
        <member name="P:RtlTvMazeScraper.Infrastructure.Sql.Model.Show.Id">
            <summary>
            Gets or sets the identifier.
            </summary>
            <value>
            The identifier.
            </value>
        </member>
        <member name="P:RtlTvMazeScraper.Infrastructure.Sql.Model.Show.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:RtlTvMazeScraper.Infrastructure.Sql.Model.Show.ShowCastMembers">
            <summary>
            Gets the show's cast.
            </summary>
            <value>
            The cast.
            </value>
        </member>
        <member name="T:RtlTvMazeScraper.Infrastructure.Sql.Model.ShowCastMember">
            <summary>
            Represents the many-to-many relationship between <see cref="P:RtlTvMazeScraper.Infrastructure.Sql.Model.ShowCastMember.Show"/>s and <see cref="P:RtlTvMazeScraper.Infrastructure.Sql.Model.ShowCastMember.CastMember"/>s.
            </summary>
        </member>
        <member name="P:RtlTvMazeScraper.Infrastructure.Sql.Model.ShowCastMember.ShowId">
            <summary>
            Gets or sets the show identifier (FK).
            </summary>
            <value>
            The show identifier.
            </value>
        </member>
        <member name="P:RtlTvMazeScraper.Infrastructure.Sql.Model.ShowCastMember.Show">
            <summary>
            Gets or sets the show.
            </summary>
            <value>
            The show.
            </value>
        </member>
        <member name="P:RtlTvMazeScraper.Infrastructure.Sql.Model.ShowCastMember.CastMemberId">
            <summary>
            Gets or sets the cast member identifier (FK).
            </summary>
            <value>
            The cast member identifier.
            </value>
        </member>
        <member name="P:RtlTvMazeScraper.Infrastructure.Sql.Model.ShowCastMember.CastMember">
            <summary>
            Gets or sets the cast member.
            </summary>
            <value>
            The cast member.
            </value>
        </member>
        <member name="T:RtlTvMazeScraper.Infrastructure.Sql.Model.ShowContext">
            <summary>
            The DB context for the show database.
            </summary>
            <seealso cref="T:Microsoft.EntityFrameworkCore.DbContext" />
        </member>
        <member name="M:RtlTvMazeScraper.Infrastructure.Sql.Model.ShowContext.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions{RtlTvMazeScraper.Infrastructure.Sql.Model.ShowContext})">
            <summary>
            Initializes a new instance of the <see cref="T:RtlTvMazeScraper.Infrastructure.Sql.Model.ShowContext"/> class.
            </summary>
            <param name="options">The options.</param>
        </member>
        <member name="P:RtlTvMazeScraper.Infrastructure.Sql.Model.ShowContext.Shows">
            <summary>
            Gets or sets the shows.
            </summary>
            <value>
            The shows.
            </value>
        </member>
        <member name="P:RtlTvMazeScraper.Infrastructure.Sql.Model.ShowContext.CastMembers">
            <summary>
            Gets or sets the cast members.
            </summary>
            <value>
            The cast members.
            </value>
        </member>
        <member name="P:RtlTvMazeScraper.Infrastructure.Sql.Model.ShowContext.ShowCastMembers">
            <summary>
            Gets or sets the show cast members, the many-to-many relation between <see cref="T:RtlTvMazeScraper.Infrastructure.Sql.Model.Show"/> and <see cref="T:RtlTvMazeScraper.Infrastructure.Sql.Model.CastMember"/>.
            </summary>
            <value>
            The show cast members.
            </value>
        </member>
        <member name="M:RtlTvMazeScraper.Infrastructure.Sql.Model.ShowContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <summary>
            Further configure the model that was discovered by convention from the entity types
            exposed in <see cref="T:Microsoft.EntityFrameworkCore.DbSet`1" /> properties on your derived context. The resulting model may be cached
            and re-used for subsequent instances of your derived context.
            </summary>
            <param name="modelBuilder">The builder being used to construct the model for this context. Databases (and other extensions) typically
            define extension methods on this object that allow you to configure aspects of the model that are specific
            to a given database.</param>
            <remarks>
            If a model is explicitly set on the options for this context (via <see cref="M:Microsoft.EntityFrameworkCore.DbContextOptionsBuilder.UseModel(Microsoft.EntityFrameworkCore.Metadata.IModel)" />)
            then this method will not be run.
            </remarks>
        </member>
        <member name="T:RtlTvMazeScraper.Infrastructure.Sql.Repositories.ShowRepository">
            <summary>
            A repository for locally stored shows.
            </summary>
            <seealso cref="T:RtlTvMazeScraper.Core.Interfaces.IShowRepository" />
        </member>
        <member name="M:RtlTvMazeScraper.Infrastructure.Sql.Repositories.ShowRepository.#ctor(Microsoft.Extensions.Logging.ILogger{RtlTvMazeScraper.Infrastructure.Sql.Repositories.ShowRepository},RtlTvMazeScraper.Infrastructure.Sql.Interfaces.IShowContext)">
            <summary>
            Initializes a new instance of the <see cref="T:RtlTvMazeScraper.Infrastructure.Sql.Repositories.ShowRepository" /> class.
            </summary>
            <param name="logger">The logger.</param>
            <param name="showContext">The show context.</param>
        </member>
        <member name="M:RtlTvMazeScraper.Infrastructure.Sql.Repositories.ShowRepository.GetShows(System.Int32,System.Int32)">
            <summary>
            Gets the list of shows (including cast).
            </summary>
            <param name="startId">The id to start at.</param>
            <param name="count">The number of shows to download.</param>
            <returns>
            A list of shows with cast.
            </returns>
        </member>
        <member name="M:RtlTvMazeScraper.Infrastructure.Sql.Repositories.ShowRepository.GetShowsWithCast(System.Int32,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Gets a page of the shows including cast.
            </summary>
            <param name="page">The page number (0-based).</param>
            <param name="pagesize">The size of the page.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A list of shows with cast.
            </returns>
        </member>
        <member name="M:RtlTvMazeScraper.Infrastructure.Sql.Repositories.ShowRepository.StoreShowList(System.Collections.Generic.List{RtlTvMazeScraper.Core.Model.Show},System.Func{System.Int32,System.Threading.Tasks.Task{System.Collections.Generic.List{RtlTvMazeScraper.Core.Model.CastMember}}})">
            <summary>
            Stores the show list.
            </summary>
            <param name="list">The list.</param>
            <param name="getCastOfShow">A function to get the cast of one show.</param>
            <returns>
            A Task.
            </returns>
        </member>
        <member name="M:RtlTvMazeScraper.Infrastructure.Sql.Repositories.ShowRepository.GetCounts">
            <summary>
            Gets the counts of shows and cast.
            </summary>
            <returns>
            A tuple having counts of shows and castmembers.
            </returns>
        </member>
        <member name="M:RtlTvMazeScraper.Infrastructure.Sql.Repositories.ShowRepository.GetMaxShowId">
            <summary>
            Gets the maximum show identifier.
            </summary>
            <returns>
            The highest ID.
            </returns>
        </member>
        <member name="M:RtlTvMazeScraper.Infrastructure.Sql.Repositories.ShowRepository.GetCastOfShow(System.Int32)">
            <summary>
            Gets the cast of show.
            </summary>
            <param name="showId">The show identifier.</param>
            <returns>A list of cast members.</returns>
        </member>
        <member name="M:RtlTvMazeScraper.Infrastructure.Sql.Repositories.ShowRepository.GetShowById(System.Int32)">
            <summary>
            Gets the show by identifier.
            </summary>
            <param name="id">The identifier.</param>
            <returns>One Show (if found).</returns>
        </member>
        <member name="T:RtlTvMazeScraper.Infrastructure.Sql.Startup">
            <summary>
            Statup as relates to this project.
            </summary>
        </member>
        <member name="M:RtlTvMazeScraper.Infrastructure.Sql.Startup.ConfigureDI(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Configures the dependecy injection, specific for this project.
            </summary>
            <param name="services">The services.</param>
        </member>
    </members>
</doc>
